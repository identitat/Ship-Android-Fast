/*
 *     Copyright (c) 2015-present Victor Hidalgo Lorenzo
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 */

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'me.tatarka:gradle-retrolambda:3.2.4'
  }
}

apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.fernandocejas.frodo'

android {

  // Remove on release
  // defaultPublishConfig "debug"

  compileSdkVersion rootProject.ext.androidCompileSdkVersion
  buildToolsVersion rootProject.ext.androidBuildToolsVersion

  defaultConfig {
    minSdkVersion rootProject.ext.androidMinSdkVersion
    targetSdkVersion rootProject.ext.androidTargetSdkVersion
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
  }

  lintOptions {
    quiet true
    abortOnError false
    ignoreWarnings true
    disable 'InvalidPackage' // Some libraries have issues with this
    disable 'OldTargetApi' // Due to Robolectric that modifies the manifest when running tests
  }
}

dependencies {
  def dataDependencies = rootProject.ext.dataDependencies
  def testDependencies = rootProject.ext.dataTestDependencies

  compile project(':domain')
  compile project(':commons')

  apt dataDependencies.daggerCompiler
  provided dataDependencies.javaxAnnotation
  compile dataDependencies.dagger
  compile dataDependencies.rxJava
  compile dataDependencies.rxAndroid
  compile dataDependencies.retrofit
  compile dataDependencies.httpLogInterceptor
  compile dataDependencies.gsonConverter
  compile dataDependencies.gson
  compile dataDependencies.timber

  apt dataDependencies.autoValue
  provided dataDependencies.autoValue
  apt dataDependencies.autoValueGson

  debugCompile dataDependencies.stetho
  debugCompile dataDependencies.stethoInterceptor
  compile dataDependencies.stethoOkhttp

  testCompile testDependencies.junit
  testCompile testDependencies.assertj
  testCompile testDependencies.mockito
  testCompile testDependencies.robolectric
}

tasks.matching {it instanceof Test}.all {
  testLogging.events = ["failed", "passed", "skipped"]
}